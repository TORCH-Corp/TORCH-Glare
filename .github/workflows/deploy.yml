name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
          
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
          
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keygen -l -f ~/.ssh/id_ed25519 || echo "Invalid key format"
          echo "StrictHostKeyChecking no" > ~/.ssh/config
          
      - name: Test SSH Connection
        run: ssh -v ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "echo Connection successful" || echo "SSH connection failed"
        
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT || '22' }}
          debug: true
          script: |
            cd /home/admin/Torch-Glare-Website
            git pull
            if ! command -v pnpm &> /dev/null; then
              npm install -g pnpm
            fi
            pnpm install --no-frozen-lockfile
            pnpm build
            pm2 restart glare-website || pm2 start npm --name "glare-website" -- run start
            
      - name: Health check
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT || '22' }}
          script: |
            sleep 10
            if ! curl -s -f http://localhost:3000 > /dev/null; then
              echo "Health check failed! Application is not responding."
              echo "Deployment failed at $(date)" >> /home/admin/deploy-errors.log
              exit 1
            else
              echo "Deployment successful at $(date)" >> /home/admin/deploy-success.log
            fi
            
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify deployment status
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: ${{ needs.deploy.result == 'success' && 'good' || 'danger' }}
          SLACK_TITLE: Deployment ${{ needs.deploy.result == 'success' && 'Successful' || 'Failed' }}
          SLACK_MESSAGE: 'Torch-Glare-Website deployment to production ${{ needs.deploy.result }}'
          SLACK_FOOTER: 'GitHub Actions'
        if: env.SLACK_WEBHOOK != ''
